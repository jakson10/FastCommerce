version: '3.4'

networks:
  dockerapi-dev:
    driver: bridge 

services:
  fastcommerce.web.api:
    image: ${DOCKER_REGISTRY-}fastcommercewebapi
    depends_on:
      - "postgres_image"
      - "redis_image"
    build:
      context: .
      dockerfile: FastCommerce.Web.API/Dockerfile
    environment:
      DB_CONNECTION_STRING: "host=postgres_image;port=5432;Database=fastCommerce;Username=postgres;Password=postgresPassword"      
    networks:
      - dockerapi-dev
    ports:
      - "5000:443"
      - "5001:80"
  postgres_image:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgresPassword"
      POSTGRES_DB: "fastCommerce"
    networks:
      - dockerapi-dev
  redis_image:
    image: redis:latest
    ports:
      - "6379:6379"
    restart: always
    networks:
      - dockerapi-dev
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - dockerapi-dev
  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.0
    ports:
      - "5601:5601"
    networks:
      - dockerapi-dev
    depends_on:
      - elasticsearch
  pgadmin: 
    image: dpage/pgadmin4
    restart: always
    ports:
    - "8080:8081"
    environment:
        PGADMIN_DEFAULT_EMAIL: m.utkukul@gmail.com
        PGADMIN_DEFAULT_PASSWORD: BigSecret
        PGADMIN_LISTEN_PORT: 8081
    volumes:
    - pgadmin-data:/var/lib/pgadmin
    links:
    - "postgres_image:pgsql-server"
    networks:
      - dockerapi-dev
volumes:
  esdata:
     driver: local
  database-data:
  pgadmin-data:
